openapi: 3.1.1
info:
  title: Mauerstrassenloewen API
  description: API for interacting with the Mauerstrassenloewen platform.
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: Reverse proxy server
  - url: http://localhost:8082
    description: Backend/msl service
  - url: http://localhost:8083
    description: Simulation service
paths:
  /msl/api/v1/chatbot/simple-prompt:
    post:
      summary: Simple prompt
      description: Send a simple prompt to the chatbot and receive a response.
      tags:
        - Chatbot
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartChatRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '400':
          description: Bad request
        '415':
          description: Unsupported media type
        '500':
          description: Internal server error

  /msl/api/v1/chatbot/start-chat:
    post:
      summary: Start a new chat
      operationId: startChat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartChatRequest'
      responses:
        '200':
          description: Chat started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      tags:
        - Chatbot

  /msl/api/v1/chatbot/send-message:
    post:
      summary: Send a message to an existing chat
      operationId: sendChatMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendChatMessageRequest'
      responses:
        '200':
          description: Message sent successfully and chat updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      tags:
        - Chatbot

  /msl/api/v1/user/register:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad request
        '409':
          description: User already exists
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      tags:
        - Users

  /msl/api/v1/user/{id}:
    get:
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '404':
          description: User not found
        '500':
          description: Internal Server Error
      tags:
        - Users

    put:
      summary: Update user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '204':
          description: User updated successfully
        '400':
          description: Bad request
        '404':
          description: User not found
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      tags:
        - Users

    delete:
      summary: Delete user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully
        '400':
          description: Bad request
        '404':
          description: User not found
        '500':
          description: Internal Server Error
      tags:
        - Users

  /msl/api/v1/user/me:
    get:
      summary: Get current user
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '500':
          description: Internal Server Error
      tags:
        - Users


  /msl/api/v1/auth-token:
    get:
      summary: Get auth tokens for current user
      operationId: getUserTokens
      responses:
        '200':
          description: List of tokens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
        '400':
          description: Bad Request - Accept header must be application/json
        '500':
          description: Internal Server Error
      parameters:
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            enum: [application/json]
      tags:
        - Auth
    post:
      summary: Create a new auth token for current user
      responses:
        '201':
          description: Token created
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad Request - Accept header must be text/plain
        '500':
          description: Internal Server Error
      parameters:
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            enum: [text/plain]
      tags:
        - Auth

  /msl/api/v1/auth-token/{tokenid}:
    delete:
      summary: Delete a specific auth token
      parameters:
        - name: tokenid
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Token deleted
        '403':
          description: Forbidden - Token does not belong to the user
        '500':
          description: Internal Server Error
      tags:
        - Auth

  /msl/api/v1/lesson:
    get:
      summary: Get existent lessons for user
      responses:
        '200':
          description: Lessons for user found
        '400':
          description: Bad request
        '404':
          description: Lessons for user not found
        '500':
          description: Internal Server Error
      tags:
        - Lesson

  /msl/api/v1/lesson/{lesson_id}:
    put:
      summary: Create or update lessons for user
      responses:
        '200':
          description: Lessons created or updated successfully
        '400':
          description: Bad request
        '404':
          description: User not found
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lesson'
      tags:
        - Lesson

  /simulation/api/v1/simulation:
    post:
      summary: Create simulation
      description: Create a new simulation.
      tags:
        - Simulation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateSimulationRequest'
      responses:
        '201':
          description: Simulation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Simulation'
        '400':
          description: Bad request (invalid request body)
        '404':
          description: Simulation not found
        '500':
          description: Internal server error

  /simulation/api/v1/simulation/{simulationId}:
    get:
      summary: Get simulation
      description: Get a simulation by its ID.
      tags:
        - Simulation
      responses:
        '200':
          description: Found simulation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Simulation'
        '400':
          description: Bad request
        '409':
          description: Simulation already exists
        '415':
          description: Unsupported media type
        '500':
          description: Internal server error
    put:
      summary: Update simulation
      description: Update an existing simulation.
      tags:
        - Simulation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Simulation'
      responses:
        '204':
          description: Simulation updated successfully
        '400':
          description: Bad request
        '404':
          description: Simulation not found
        '500':
          description: Internal server error
    delete:
      summary: Delete simulation
      description: Delete a simulation by its ID.
      tags:
        - Simulation
      responses:
        '204':
          description: Simulation updated successfully
        '400':
          description: Bad request
        '404':
          description: Simulation not found
        '500':
          description: Internal server error
components:
  schemas:
    StartChatRequest:
      type: object
      required:
        - system_msg
      properties:
        user_msg:
          type: string
          description: The user's initial message.
        system_msg:
          type: string
          description: The system message used to guide the assistant.

    SendChatMessageRequest:
      type: object
      required:
        - chat_id
        - user_msg
      properties:
        chat_id:
          type: string
          description: ID of the chat to send the message to.
        user_msg:
          type: string
          description: The message content from the user.

    Message:
      type: object
      properties:
        role:
          type: string
          description: The role of the message sender (e.g., user, system, assistant).
        content:
          type: string
          description: The message content.
        sent_at:
          type: string
          format: date-time
          description: Timestamp when the message was sent.

    Chat:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the chat session.
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: List of messages exchanged in the chat.

    User:
      type: object
      properties:
        id:
          type: string
        e_mail:
          type: string
          format: email
        password:
          type: string
          format: password
        last_name:
          type: string
        first_name:
          type: string
        date_of_birth:
          type: string
          format: date-time
        place_of_birth:
          type: string
        marital_status:
          type: string
        profession:
          type: string
        citizenship:
          type: string
        degree:
          type: string
        salary_per_month:
          type: number
          format: float
        assets:
          type: string
        self_employed:
          type: boolean
        trading_budget_per_month:
          type: number
          format: float
        has_trading_experience:
          type: boolean
        trading_experience:
          type: string
        knowledge_in_trading:
          type: string
        motivation:
          type: string
        exclude_companies:
          type: string
        risk_taking:
          type: integer
        preferences:
          type: string
      required:
        - e_mail
        - password
        - last_name
        - first_name
    Lesson:
      type: object
      properties:
        user_id:
          type: string
        done:
            type: "map<string, boolean>"
    Token:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        hash:
          type: string
        expiresAt:
          type: string
          format: date-time
    CreateOrUpdateSimulationRequest:
      type: object
      properties:
        name:
          type: string
          example: 'My Simulation'
      required:
        - name
    Simulation:
      type: object
      properties:
        id:
          type: string
          example: '52434ef7-cdb5-4267-9e8b-86eba4e03780'
        name:
          type: string
          example: 'My Simulation'
      required:
        - id
        - name
